<included>

    <!-- 日志对象输出格式 -->
    <conversionRule conversionWord="msg" converterClass="com.argyranthemum.common.core.log.ArgumentJsonFormatLayout"/>

    <!-- ConsoleAppender 控制台输出日志 所有环境输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 对日志进行格式化 -->
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <!-- 在dev情况下输出 -->
    <!-- ERROR级别日志 -->
    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 RollingFileAppender-->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录WARN级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>

        <file>${log_dir}/error.log</file>
        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志输出位置  可相对、和绝对路径 -->
            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6，
            each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>

        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 过滤器，只记录WARN级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>

        <file>${log_dir}/info.log</file>
        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志输出位置  可相对、和绝对路径 -->
            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/info.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6，
            each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>60</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>

        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <!-- DEBUG级别日志 -->
    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 RollingFileAppender-->
    <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <!-- 过滤器，只记录WARN级别的日志 -->
        <file>${log_dir}/debug.log</file>
        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志输出位置  可相对、和绝对路径 -->
            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/debug.%d{yyyyMMdd}.%i.log</fileNamePattern>
            <!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6，
            each file should be at most 100MB, keep 60 days worth of history, but at most 20GB -->
            <maxFileSize>200MB</maxFileSize>
            <maxHistory>50</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>

        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <!-- 数据库执行日志 -->
    <appender name="sql" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <file>${log_dir}/sql.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/sql.%d{yyyyMMdd}.%i.log</fileNamePattern>
            <maxFileSize>200MB</maxFileSize>
            <maxHistory>50</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <!-- 访问日志 -->
    <appender name="access-log" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <file>${log_dir}/access-log.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/access-log.%d{yyyyMMdd}.%i.log</fileNamePattern>
            <maxFileSize>200MB</maxFileSize>
            <maxHistory>50</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <!-- HTTP日志 -->
    <appender name="http-stat" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <file>${log_dir}/http-stat.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/http-stat.%d{yyyyMMdd}.%i.log</fileNamePattern>
            <maxFileSize>200MB</maxFileSize>
            <maxHistory>50</maxHistory>
            <totalSizeCap>10GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <logger name="org.springframework.beans.factory.support.DefaultListableBeanFactory" level="WARN"/>
    <logger name="org.springframework.boot.autoconfigure.logging" level="WARN"/>
    <logger name="org.springframework.core.env.PropertySourcesPropertyResolver" level="WARN"/>
    <logger name="org.hibernate.persister.walking.spi.MetamodelGraphWalker" level="WARN"/>
    <logger name="org.hibernate.type.BasicTypeRegistry" level="WARN"/>
    <logger name="org.springframework.core.env.MutablePropertySources" level="WARN"/>
    <logger name="org.hibernate.jpa.internal.util.LogHelper" level="WARN"/>
    <logger name="org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader" level="WARN"/>
    <logger name="org.springframework.context.annotation.ConfigurationClassEnhancer" level="WARN"/>
    <logger name="org.springframework.web.context.support.StandardServletEnvironment" level="WARN"/>
    <logger name="org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory" level="WARN"/>
    <logger name="org.hibernate.cfg.annotations.SimpleValueBinder" level="WARN"/>
    <logger name="org.hibernate.cfg.annotations.PropertyBinder" level="WARN"/>
    <logger name="org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter" level="WARN"/>
    <logger name="org.hibernate.engine.internal.TwoPhaseLoad" level="WARN"/>
    <logger name="org.hibernate.loader.Loader" level="WARN"/>
    <logger name="org.springframework.aop.framework.CglibAopProxy" level="WARN"/>
    <logger name="org.springframework.beans.factory.annotation" level="WARN"/>
    <logger name="org.springframework.context.annotation" level="WARN"/>
    <logger name="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" level="WARN"/>
    <logger name="org.springframework.core.io.support.PathMatchingResourcePatternResolver" level="WARN"/>
    <logger name="org.springframework.boot.web.filter.OrderedRequestContextFilter" level="WARN"/>
    <logger name="org.springframework.boot.logging.ClasspathLoggingApplicationListener" level="WARN"/>
    <logger name="org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext" level="WARN"/>
    <logger name="org.springframework.data.redis.core.RedisConnectionUtils" level="WARN"/>
    <logger name="org.springframework.session.web.http" level="WARN"/>
    <logger name="com.zaxxer.hikari.pool" level="WARN"/>
    <logger name="ShardingSphere-SQL" level="WARN"/>

    <logger name="org.hibernate.SQL">
        <appender-ref ref="sql"/>
    </logger>
    <logger name="com.argyranthemum.common.api.interceptor.AccessLogInterceptor" additivity="false">
        <appender-ref ref="access-log"/>
    </logger>
    <logger name="http.stat" additivity="false">
        <appender-ref ref="http-stat"/>
    </logger>

</included>